spring:
  config:
    import:
      - optional:classpath:.env[.properties]
      - optional:file:.env[.properties]
    profiles:
      active: local

  profiles:
    active: local

  application:
    name: damul-server

  cache:
    type: redis
    redis:
      time-to-live: 86400000  # 24시간(밀리초 단위)
      cache-null-values: false
  task:
    scheduling:
      pool:
        size: 5  # 스케줄링 스레드 풀 크기
      thread-name-prefix: schedule-task-  # 스케줄링 스레드 이름 접두사

  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: true

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

  jpa:
    hibernate:
      ddl-auto: none    # 스키마 자동 생성/수정 비활성화
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 100MB

  main:
    allow-bean-definition-overriding: true

  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_ACCESS_KEY}
      s3:
        bucket: ${AWS_S3_BUCKET}
      region:
        static: ap-northeast-2
      stack:
        auto: false

  security:
    admin:
      password: ${ADMIN_PASSWORD}
    oauth2:
      client:
        registration:
          google:
            client-name: GOOGLE
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URL}
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email

          naver:
            client-name: NAVER
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_REDIRECT_URL}
            authorization-grant-type: authorization_code
            scope:
              - nickname
              - email
              - profile_image

          kakao:
            client-name: KAKAO
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URL}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
              - profile_image

        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://www.googleapis.com/oauth2/v4/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  datasource:
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000



jwt:
  secret: ${JWT_SECRET}
  access-token-expiration: ${JWT_ACCESS_VALIDITY}
  refresh-token-expiration: ${JWT_REFRESH_VALIDITY}
  temporary-token-expiration: ${JWT_TEMPORARY_VALIDITY}

fastapi:
  server:
    url: ${FASTAPI_URL}

socket:
  server:
    url: ${FRONT_URL}

logging:
  level:
    root: INFO
    com.damul.api: INFO
    org.springframework.data.repository.config: WARN

redirect:
  frontUrl: ${FRONT_URL}
  main: ${MAIN_URL}
  terms: ${TERMS_URL}